{"changed":true,"filter":false,"title":"user.rb","tooltip":"/The-Challenger-website/app/models/user.rb","value":"class User < ActiveRecord::Base\n\n# Include default devise modules. Others available are:\n# :confirmable, :lockable, :timeoutable and :omniauthabl\n# before_save :delete_avatar, if:{ delete_avatar == '1' && !avatar_updated_at_changed? }\n\n#This method gets the user's full name to be used later in the views\n# ransacker :full_name do |parent|\n#     Arel::Nodes::NamedFunction.new('concat_ws', [' ', parent.table[:first_name], parent.table[:last_name]])\n#   end\nransacker :full_name do |parent|\n  Arel::Nodes::InfixOperation.new('||',\n    Arel::Nodes::InfixOperation.new('||',\n      parent.table[:first_name], Arel::Nodes.build_quoted(' ')\n    ),\n    parent.table[:last_name]\n  )\nend\n\n def full_name\n  if self.first_name.blank? && self.last_name.blank?\n      self.email\n  else\n      self.first_name + \" \" + self.last_name\n  end\n end\n\n\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable\n\thas_many :challenges, :dependent => :destroy\n\thas_many :comments, :dependent => :destroy\n\thas_many :Likes, :dependent => :destroy\n  has_many :reports, :dependent => :destroy\n  has_many :friends, :dependent => :destroy\n  has_attached_file :avatar, :styles => { :medium => \"300x300>\", :thumb => \"100x100#\" }, :default_url => \"missing.jpeg\"\n  validates_attachment_content_type :avatar, :content_type => /\\Aimage\\/.*\\Z/\n  validates :age, :numericality => {:only_integer => true}, :allow_nil => true,\n  :length => {:maximum => 2}\n  # validates :age, :numericality => {:must_be_less_than_or_equal_to => 100}\n\nend\nclass User < ActiveRecord::Base\n  def self.from_omniauth(auth)\n    where(auth.slice(:provider, :uid)).first_or_initialize.tap do |user|\n      user.provider = auth.provider\n      user.uid = auth.uid\n      user.name = auth.info.name\n      user.oauth_token = auth.credentials.token\n      user.oauth_expires_at = Time.at(auth.credentials.expires_at)\n      user.save!\n    end\n  end\nend","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":42,"column":0},"end":{"row":53,"column":3},"action":"insert","lines":["class User < ActiveRecord::Base","  def self.from_omniauth(auth)","    where(auth.slice(:provider, :uid)).first_or_initialize.tap do |user|","      user.provider = auth.provider","      user.uid = auth.uid","      user.name = auth.info.name","      user.oauth_token = auth.credentials.token","      user.oauth_expires_at = Time.at(auth.credentials.expires_at)","      user.save!","    end","  end","end"]}]}]]},"ace":{"folds":[],"scrolltop":514.5996704101562,"scrollleft":0,"selection":{"start":{"row":53,"column":3},"end":{"row":53,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":34,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1430487699074}